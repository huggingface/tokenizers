name: Python Release

on:
  push:
    branches:
      - python-release

jobs:

  create_wheels_manylinux:
    runs-on: ubuntu-latest
    name: Create wheels for manylinux
    container:
      image: quay.io/pypa/manylinux1_x86_64
      volumes:
        - ./:/io
    steps:
      - uses: actions/checkout@v1

      - name: Build and audit wheels
        working-directory: /io/bindings/python
        run: sh build-wheels.sh

      - uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: '/io/bindings/python/dist'
          DEST_DIR: 'python/wheels/'

  create_wheels_others:
    name: Create wheels for other OSes
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python: [3.5, 3.6, 3.7]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2019-11-01
          override: true

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: 'x64'

      - name: Install dependencies
        run: |
          pip install setuptools wheel setuptools-rust

      - name: Build wheel
        working-directory: ./bindings/python
        run: python setup.py bdist_wheel

      - uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: './bindings/python/dist'
          DEST_DIR: 'python/wheels/'
