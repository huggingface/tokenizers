name: Python

on:
  push:
    branches:
      - master
    paths-ignore:
      - bindings/node/**
  pull_request:
    paths-ignore:
      - bindings/node/**

jobs:
  code_quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
          architecture: "x64"

      - name: Install dependencies
        run: pip install black==19.10b0

      - name: Check style
        working-directory: ./bindings/python
        run: make check-style

  build_win_32:
    name: Check it builds for Windows 32-bit
    runs-on: windows-latest
    strategy:
      matrix:
        python: [3.5, 3.6, 3.7, 3.8]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-i686-pc-windows-msvc
          override: true

      - name: Override toolchain
        shell: bash
        working-directory: ./bindings/python
        run: echo "stable-i686-pc-windows-msvc" > rust-toolchain


      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x86

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path ./bindings/python/Cargo.toml

  build_and_test:
    name: Check everything builds & tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

          # # Necessary for now for the cargo cache: https://github.com/actions/cache/issues/133#issuecomment-599102035
          # - run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/

          # - name: Cache Cargo Registry
          #   uses: actions/cache@v1
          #   with:
          #     path: ~/.cargo/registry
          #     key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

          # - name: Cache Cargo Build Target
          #   uses: actions/cache@v1
          #   with:
          #     path: ./bindings/python/target
          #     key: ${{ runner.os }}-cargo-python-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Lint with RustFmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: fmt
          args: --manifest-path ./bindings/python/Cargo.toml -- --check

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
          architecture: "x64"

      - name: Run tests
        working-directory: ./bindings/python
        run: |
          python -m venv .env
          source .env/bin/activate
          pip install pytest requests setuptools_rust numpy
          python setup.py develop
          make test
